# SPDX-FileCopyrightText: 2025 Sebastian KÃ¼the and (other) contributors to project grafana-oss-team-sync <https://github.com/skuethe/grafana-oss-team-sync>
# SPDX-License-Identifier: GPL-3.0-or-later

---
name: Extended Tests
on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/extended-tests.yaml'
      - 'internal/**'
      - '*.go'
      - 'go.mod'

permissions:
  contents: read

jobs:

  # Integration Tests
  integration-tests:
    runs-on: ubuntu-latest
    environment: integration-tests

    strategy:
      matrix:
        version: [11.1.0, 12.0.0, latest]

    # Define service containers for integration tests
    services:
      grafana:
        image: docker.io/grafana/grafana-oss:${{ matrix.version }}
        ports:
          - 3000:3000
        options: >-
          --health-cmd "nc -z localhost 3000"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: 'go.mod'

      - name: Force clean testing
        run: go clean -testcache -tags=integration

      - name: Test
        run: go test -v -tags=integration  ./...
        env:
          # Tell GOTS to load the e2e config and authfile
          GOTS_CONFIG: ${{ github.workspace }}/test/data/integration-tests_config.yaml
          GOTS_AUTHFILE: ${{ github.workspace }}/test/data/integration-tests_authfile.env

          # Configure against Grafana service container
          GOTS_SCHEME: http
          GOTS_HOST: localhost:3000
          GOTS_RETRY: 10



  # End To End Tests
  e2e-tests:
    runs-on: ubuntu-latest
    environment: e2e-tests

    strategy:
      matrix:
        sourceplugin: ["entraid"]

    # Define service containers for end to end tests
    services:

      # Start devproxy instance, to mock plugin source data
      devproxy:
        image: ghcr.io/dotnet/dev-proxy:1.2.1@sha256:2203706be12a57af5b71506f6b6db737c90f155db03b766d3da1434efbf9be2e
        env:
          # ref: https://learn.microsoft.com/en-us/microsoft-cloud/dev/dev-proxy/how-to/use-dev-proxy-in-ci-cd-overview
          CI: 1
        ports:
        - 8000:8000
        - 8897:8897
        options: >-
          --health-cmd "/bin/bash -c 'echo >/dev/tcp/localhost/8897'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Start latest Grafana stable, to run e2e tests against
      grafana:
        image: docker.io/grafana/grafana-oss:latest@sha256:60794dc17e6a58d28539cfd3dd496a7f2da62e13ff54a4055431385eec5d6639
        ports:
          - 3000:3000
        options: >-
          --health-cmd "nc -z localhost 3000"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: 'go.mod'

      # As we cannot reliably mount files into service containers, we copy them over and restart the specific service
      - name: Copy files to service
        run: |
          docker cp ${{ github.workspace }}/test/devproxy/configs/${{ matrix.sourceplugin }}.json ${{ job.services.devproxy.id }}:/config/devproxyrc.json
          docker cp ${{ github.workspace }}/test/devproxy/configs/${{ matrix.sourceplugin }}-mocks.json ${{ job.services.devproxy.id }}:/config/
      # Unfortunately we can not use "docker wait --condition healthy ${{ job.services.devproxy.id }}", as this is currently only supported in podman, not docker
      - name: Restart service
        timeout-minutes: 2
        run: |
          docker restart ${{ job.services.devproxy.id }}
          bash -c "sleep 10; until </dev/tcp/127.0.0.1/8897; do sleep 1; done"

      - name: Fetch devproxy cert
        run: curl --connect-timeout 10 http://127.0.0.1:8897/proxy/rootCertificate?format=crt --output ${{ github.workspace }}/devproxy.pem

      - name: Force clean testing
        run: go clean -testcache -tags=e2e

      - name: Test
        run: go test -v -tags=e2e ./...
        env:
          # Set env var for go to respect the selfsigned cert of devproxy instance
          SSL_CERT_FILE: ${{ github.workspace }}/devproxy.pem

          # Set GOTS specific input
          GOTS_AUTHFILE: ${{ github.workspace }}/test/data/e2e-tests_${{ matrix.sourceplugin }}_authfile.env
          GOTS_CONFIG: ${{ github.workspace }}/test/data/e2e-tests_config.yaml
          GOTS_SOURCE: "${{ matrix.sourceplugin }}"
